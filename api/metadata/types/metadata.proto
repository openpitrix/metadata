// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";

package metadata.types;

option go_package = "openpitrix.io/metadata/pkg/pb/types;pbtypes";

// https://docs.qingcloud.com/appcenter/docs/metadata-service.html

// pb rules for etcd:
// 1. disable repeated fields, etcd only support k/v format

message Metadata {
	// Instance host                     = _; // softlink, ignore
	Cluster cluster                      = 1; //
	map<string, Instance> hosts          = 2; // key: [role name]/[instance_id]
	map<string, Instance> adding_hosts   = 3; // key: [role name]/[instance_id]
	map<string, Instance> deleting_hosts = 4; // key: [role name]/[instance_id]
	map<string, string> env              = 5; // /env/[parameter key]* [parameter value]
	map<string, string> links            = 6; // /links/[service name]* [cluster_id]
	string vertical_scaling_roles        = 7; // a,b,c
	CommandInfo cmd                      = 8; //
}

// key: /self/cluster
message Cluster {
	string app_id                       = 1; // application ID
	string cluster_id                   = 2; // cluster ID
	string user_id                      = 3; // user ID
	string global_uuid                  = 4; // global UUID
	string subnet                        = 5; // Subnet ID
	string zone                         = 6; // Zone ID
	map<string, Endpoint> endpoints     = 7; // key: service name
	map<string, IPAddress> reserved_ips = 8; // moved: endpoints/reserved_ips => reserved_ips
	Endpoint api_server                 = 9;
}

// key: /self/host
// key: /self/hosts/[role name]/[instance_id]
// key: /self/adding-hosts/[role name]/[instance_id]
// key: /self/deleting-hosts/[role name]/[instance_id]
// key: /[instance_id]
message Instance {
	string id                           =  1; // Drone ID
	string ip                           =  2; // IP address
	int32 port                          =  3; // Listen Port
	string eip                          =  4; // public IP address
	string mac                          =  5; // MAC address
	string sid                          =  6; // server ID
	string gid                          =  7; // group ID
	string gsid                         =  8; // global server ID
	string node_id                      =  9; // node ID
	string instance_id                  = 10; // instance ID
	int32 cpu                           = 11; // CPU
	int32 gpu                           = 12; // GPU
	int32 memory                        = 13; // memory in MiB
	int32 volume_size                   = 14; // volume size in GiB
	string instance_class               = 15; // instance class
	string gpu_class                    = 16; // gpu classs
	string volume_class                 = 17; // volume class
	string physical_machine             = 18; // ID of the physical machine that hosts the instance
	string role                         = 19; // role name
	string pub_key                      = 20; // pub key string
	string token                        = 21; // token string
	map<string, IPAddress> reserved_ips = 22; // reserved IP name such as vip
}

message CommandInfo {
	string id     = 1;
	string cmd    = 2;
	int32 timeout = 3; // seconds
}

message Endpoint {
	string host     = 1;
	string protocol = 2;
	int32 port      = 3;
}

message IPAddress {
	string value = 1;
}
