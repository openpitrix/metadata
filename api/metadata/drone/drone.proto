// Copyright 2018 The OpenPitrix Authors. All rights reserved.
// Use of this source code is governed by a Apache license
// that can be found in the LICENSE file.

syntax = "proto3";

package metadata.drone;

option go_package = "openpitrix.io/metadata/pkg/pb/drone;pbdrone";

import "metadata/types/types.proto";
import "metadata/types/confd.proto";
import "metadata/types/drone.proto";
import "metadata/types/frontgate.proto";

service DroneService {
	rpc DistributeDrone (metadata.types.DroneBinary) returns (metadata.types.Empty);

	rpc GetPilotVersion (metadata.types.Empty) returns (metadata.types.Version);
	rpc GetFrontgateVersion (metadata.types.Empty) returns (metadata.types.Version);
	rpc GetDroneVersion (metadata.types.DroneEndpoint) returns (metadata.types.Version);

	rpc GetDroneConfig (metadata.types.Empty) returns (metadata.types.DroneConfig);
	rpc SetDroneConfig (metadata.types.DroneConfig) returns (metadata.types.Empty);

	rpc GetConfdConfig (metadata.types.Empty) returns (metadata.types.ConfdConfig);
	rpc SetConfdConfig (metadata.types.ConfdConfig) returns (metadata.types.Empty);

	rpc GetFrontgateConfig (metadata.types.Empty) returns (metadata.types.FrontgateConfig);
	rpc SetFrontgateConfig (metadata.types.FrontgateConfig) returns (metadata.types.Empty);

	rpc IsConfdRunning (metadata.types.Empty) returns (metadata.types.Bool);
	rpc StartConfd (metadata.types.Empty) returns (metadata.types.Empty);
	rpc StopConfd (metadata.types.Empty) returns (metadata.types.Empty);

	rpc GetTemplateFiles (metadata.types.Empty) returns (metadata.types.StringList);
	rpc GetValues (metadata.types.StringList) returns (metadata.types.StringMap);

	rpc PingPilot (metadata.types.FrontgateEndpoint) returns (metadata.types.Empty);
	rpc PingFrontgate (metadata.types.FrontgateEndpoint) returns (metadata.types.Empty);
	rpc PingDrone (metadata.types.Empty) returns (metadata.types.Empty);
	rpc PingMetadataBackend (metadata.types.FrontgateEndpoint) returns (metadata.types.Empty);

	rpc RunCommand (metadata.types.RunCommandOnDroneRequest) returns (metadata.types.String);
}
